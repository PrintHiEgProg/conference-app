{"ast":null,"code":"var _jsxFileName = \"/Users/egorkobzev/conference-app/src/AudioStream.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\");\nconst AudioStream = () => {\n  _s();\n  const {\n    roomID\n  } = useParams();\n  const audioRef = useRef(null);\n  const [typeUser, setTypeUser] = useState(false); // false - слушатель, true - передатчик\n\n  useEffect(() => {\n    socket.emit(\"joinVoiceRoom\", {\n      roomID,\n      typeUser\n    });\n    socket.on(\"audio\", data => {\n      const audioBlob = new Blob([data], {\n        type: \"audio/webm\"\n      });\n      const audioUrl = URL.createObjectURL(audioBlob);\n      audioRef.current.src = audioUrl;\n      audioRef.current.play();\n    });\n    return () => {\n      socket.off(\"audio\");\n    };\n  }, [roomID, typeUser]);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorder.ondataavailable = event => {\n      if (event.data.size > 0) {\n        socket.emit(\"audio\", event.data);\n      }\n    };\n    mediaRecorder.start(100); // отправляем данные каждые 100 мс\n\n    // Остановить запись после 10 секунд\n    setTimeout(() => {\n      mediaRecorder.stop();\n    }, 10000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room ID: \", roomID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"true\",\n          checked: typeUser === true,\n          onChange: () => setTypeUser(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), \"\\u041F\\u0435\\u0440\\u0435\\u0434\\u0430\\u0442\\u0447\\u0438\\u043A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"false\",\n          checked: typeUser === false,\n          onChange: () => setTypeUser(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"\\u0421\\u043B\\u0443\\u0448\\u0430\\u0442\\u0435\\u043B\\u044C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), typeUser && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      controls: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioStream, \"tvUMXFJNLpPZmho3KrS/aPPWI/I=\", false, function () {\n  return [useParams];\n});\n_c = AudioStream;\nexport default AudioStream;\nvar _c;\n$RefreshReg$(_c, \"AudioStream\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","useParams","jsxDEV","_jsxDEV","socket","AudioStream","_s","roomID","audioRef","typeUser","setTypeUser","emit","on","data","audioBlob","Blob","type","audioUrl","URL","createObjectURL","current","src","play","off","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","event","size","start","setTimeout","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","value","checked","onChange","onClick","ref","controls","_c","$RefreshReg$"],"sources":["/Users/egorkobzev/conference-app/src/AudioStream.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\n\nconst socket = io(\"http://localhost:3001\");\n\nconst AudioStream = () => {\n  const { roomID } = useParams();\n  const audioRef = useRef(null);\n  const [typeUser, setTypeUser] = useState(false); // false - слушатель, true - передатчик\n\n  useEffect(() => {\n    socket.emit(\"joinVoiceRoom\", { roomID, typeUser });\n\n    socket.on(\"audio\", (data) => {\n      const audioBlob = new Blob([data], { type: \"audio/webm\" });\n      const audioUrl = URL.createObjectURL(audioBlob);\n      audioRef.current.src = audioUrl;\n      audioRef.current.play();\n    });\n\n    return () => {\n      socket.off(\"audio\");\n    };\n  }, [roomID, typeUser]);\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    const mediaRecorder = new MediaRecorder(stream);\n\n    mediaRecorder.ondataavailable = (event) => {\n      if (event.data.size > 0) {\n        socket.emit(\"audio\", event.data);\n      }\n    };\n\n    mediaRecorder.start(100); // отправляем данные каждые 100 мс\n\n    // Остановить запись после 10 секунд\n    setTimeout(() => {\n      mediaRecorder.stop();\n    }, 10000);\n  };\n\n  return (\n    <div>\n      <h2>Room ID: {roomID}</h2>\n      <div>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"true\"\n            checked={typeUser === true}\n            onChange={() => setTypeUser(true)}\n          />\n          Передатчик\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"false\"\n            checked={typeUser === false}\n            onChange={() => setTypeUser(false)}\n          />\n          Слушатель\n        </label>\n      </div>\n      {typeUser && <button onClick={startRecording}>Start Recording</button>}\n      <audio ref={audioRef} controls></audio>\n    </div>\n  );\n};\n\nexport default AudioStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}